/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: halite.i

package halite

/*
#cgo CXXFLAGS: --std=c++11
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
extern void _wrap_Swig_free_halite_2007760261f40110(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_halite_2007760261f40110(swig_intgo arg1);
extern void _wrap_quiet_output_set_halite_2007760261f40110(_Bool arg1);
extern _Bool _wrap_quiet_output_get_halite_2007760261f40110(void);
extern swig_type_1 _wrap_randomMap_halite_2007760261f40110(short arg1, short arg2, char arg3, swig_intgo arg4);
extern uintptr_t _wrap_rawRunGame_halite_2007760261f40110(swig_intgo arg1, short arg2, short arg3, swig_intgo arg4, _Bool arg5, uintptr_t arg6, uintptr_t arg7);
extern uintptr_t _wrap__swig_NewDirectorGameEndCallbackGameEndCallback_halite_2007760261f40110(int);
extern void _wrap_DeleteDirectorGameEndCallback_halite_2007760261f40110(uintptr_t arg1);
extern _Bool _wrap__swig_DirectorGameEndCallback_upcall_Run_halite_2007760261f40110(uintptr_t, swig_intgo turn, swig_type_2 board);
extern void _wrap_delete_GameEndCallback_halite_2007760261f40110(uintptr_t arg1);
extern _Bool _wrap_GameEndCallback_run_halite_2007760261f40110(uintptr_t arg1, swig_intgo arg2, swig_type_2 arg3);
extern uintptr_t _wrap_new_GameEndCallback_halite_2007760261f40110(void);
extern uintptr_t _wrap__swig_NewDirectorTimeoutCallbackTimeoutCallback_halite_2007760261f40110(int);
extern void _wrap_DeleteDirectorTimeoutCallback_halite_2007760261f40110(uintptr_t arg1);
extern void _wrap__swig_DirectorTimeoutCallback_upcall_Run_halite_2007760261f40110(uintptr_t, swig_intgo playerTag, swig_type_3 playerName);
extern void _wrap_delete_TimeoutCallback_halite_2007760261f40110(uintptr_t arg1);
extern void _wrap_TimeoutCallback_run_halite_2007760261f40110(uintptr_t arg1, swig_intgo arg2, swig_type_3 arg3);
extern uintptr_t _wrap_new_TimeoutCallback_halite_2007760261f40110(void);
extern uintptr_t _wrap_new_UniConnectionVector__SWIG_0_halite_2007760261f40110(void);
extern uintptr_t _wrap_new_UniConnectionVector__SWIG_1_halite_2007760261f40110(swig_type_4 arg1);
extern swig_type_5 _wrap_UniConnectionVector_size_halite_2007760261f40110(uintptr_t arg1);
extern swig_type_6 _wrap_UniConnectionVector_capacity_halite_2007760261f40110(uintptr_t arg1);
extern void _wrap_UniConnectionVector_reserve_halite_2007760261f40110(uintptr_t arg1, swig_type_7 arg2);
extern _Bool _wrap_UniConnectionVector_isEmpty_halite_2007760261f40110(uintptr_t arg1);
extern void _wrap_UniConnectionVector_clear_halite_2007760261f40110(uintptr_t arg1);
extern void _wrap_UniConnectionVector_add_halite_2007760261f40110(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_UniConnectionVector_get_halite_2007760261f40110(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_UniConnectionVector_set_halite_2007760261f40110(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_UniConnectionVector_halite_2007760261f40110(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_halite_2007760261f40110(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func SetQuiet_output(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_quiet_output_set_halite_2007760261f40110(C._Bool(_swig_i_0))
}

func GetQuiet_output() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_quiet_output_get_halite_2007760261f40110())
	return swig_r
}

func RandomMap(arg1 int16, arg2 int16, arg3 byte, arg4 uint) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_randomMap_halite_2007760261f40110(C.short(_swig_i_0), C.short(_swig_i_1), C.char(_swig_i_2), C.swig_intgo(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func RawRunGame(arg1 uint, arg2 int16, arg3 int16, arg4 uint, arg5 bool, arg6 UniConnectionVector, arg7 GameEndCallback) (_swig_ret GameStatistics) {
	var swig_r GameStatistics
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (GameStatistics)(SwigcptrGameStatistics(C._wrap_rawRunGame_halite_2007760261f40110(C.swig_intgo(_swig_i_0), C.short(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3), C._Bool(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6))))
	return swig_r
}

type _swig_DirectorGameEndCallback struct {
	SwigcptrGameEndCallback
	v interface{}
}

func (p *_swig_DirectorGameEndCallback) Swigcptr() uintptr {
	return p.SwigcptrGameEndCallback.Swigcptr()
}

func (p *_swig_DirectorGameEndCallback) SwigIsGameEndCallback() {
}

func (p *_swig_DirectorGameEndCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorGameEndCallback(v interface{}) GameEndCallback {
	p := &_swig_DirectorGameEndCallback{0, v}
	p.SwigcptrGameEndCallback = SwigcptrGameEndCallback(C._wrap__swig_NewDirectorGameEndCallbackGameEndCallback_halite_2007760261f40110(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorGameEndCallback(arg1 GameEndCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorGameEndCallback_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_GameEndCallback_halite_2007760261f40110
func Swiggo_DeleteDirector_GameEndCallback_halite_2007760261f40110(c int) {
	swigDirectorLookup(c).(*_swig_DirectorGameEndCallback).SwigcptrGameEndCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceGameEndCallbackRun interface {
	Run(int, string) bool
}

func (swig_p *_swig_DirectorGameEndCallback) Run(turn int, board string) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceGameEndCallbackRun); swig_ok {
		return swig_g.Run(turn, board)
	}
	var swig_r bool
	_swig_i_0 := turn
	_swig_i_1 := board
	swig_r = (bool)(C._wrap__swig_DirectorGameEndCallback_upcall_Run_halite_2007760261f40110(C.uintptr_t(swig_p.SwigcptrGameEndCallback), C.swig_intgo(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func DirectorGameEndCallbackRun(p GameEndCallback, arg2 int, arg3 string) bool {
	var swig_r bool
	_swig_i_0 := arg2
	_swig_i_1 := arg3
	swig_r = (bool)(C._wrap__swig_DirectorGameEndCallback_upcall_Run_halite_2007760261f40110(C.uintptr_t(p.(*_swig_DirectorGameEndCallback).SwigcptrGameEndCallback), C.swig_intgo(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

//export Swig_DirectorGameEndCallback_callback_run_halite_2007760261f40110
func Swig_DirectorGameEndCallback_callback_run_halite_2007760261f40110(swig_c int, arg2 int, arg3 string) (swig_result bool) {
	var swig_r bool
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorGameEndCallback)
	_swig_i_1 = swigCopyString(arg3)
	swig_r = swig_p.Run(arg2, _swig_i_1)
	return swig_r
}

type SwigcptrGameEndCallback uintptr

func (p SwigcptrGameEndCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGameEndCallback) SwigIsGameEndCallback() {
}

func (p SwigcptrGameEndCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteGameEndCallback(arg1 GameEndCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GameEndCallback_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGameEndCallback) Run(arg2 int, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_GameEndCallback_run_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewGameEndCallback() (_swig_ret GameEndCallback) {
	var swig_r GameEndCallback
	swig_r = (GameEndCallback)(SwigcptrGameEndCallback(C._wrap_new_GameEndCallback_halite_2007760261f40110()))
	return swig_r
}

type GameEndCallback interface {
	Swigcptr() uintptr
	SwigIsGameEndCallback()
	DirectorInterface() interface{}
	Run(arg2 int, arg3 string) (_swig_ret bool)
}

type _swig_DirectorTimeoutCallback struct {
	SwigcptrTimeoutCallback
	v interface{}
}

func (p *_swig_DirectorTimeoutCallback) Swigcptr() uintptr {
	return p.SwigcptrTimeoutCallback.Swigcptr()
}

func (p *_swig_DirectorTimeoutCallback) SwigIsTimeoutCallback() {
}

func (p *_swig_DirectorTimeoutCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorTimeoutCallback(v interface{}) TimeoutCallback {
	p := &_swig_DirectorTimeoutCallback{0, v}
	p.SwigcptrTimeoutCallback = SwigcptrTimeoutCallback(C._wrap__swig_NewDirectorTimeoutCallbackTimeoutCallback_halite_2007760261f40110(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorTimeoutCallback(arg1 TimeoutCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorTimeoutCallback_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_TimeoutCallback_halite_2007760261f40110
func Swiggo_DeleteDirector_TimeoutCallback_halite_2007760261f40110(c int) {
	swigDirectorLookup(c).(*_swig_DirectorTimeoutCallback).SwigcptrTimeoutCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceTimeoutCallbackRun interface {
	Run(int, string)
}

func (swig_p *_swig_DirectorTimeoutCallback) Run(playerTag int, playerName string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceTimeoutCallbackRun); swig_ok {
		swig_g.Run(playerTag, playerName)
		return
	}
	_swig_i_0 := playerTag
	_swig_i_1 := playerName
	C._wrap__swig_DirectorTimeoutCallback_upcall_Run_halite_2007760261f40110(C.uintptr_t(swig_p.SwigcptrTimeoutCallback), C.swig_intgo(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func DirectorTimeoutCallbackRun(p TimeoutCallback, arg2 int, arg3 string) {
	_swig_i_0 := arg2
	_swig_i_1 := arg3
	C._wrap__swig_DirectorTimeoutCallback_upcall_Run_halite_2007760261f40110(C.uintptr_t(p.(*_swig_DirectorTimeoutCallback).SwigcptrTimeoutCallback), C.swig_intgo(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

//export Swig_DirectorTimeoutCallback_callback_run_halite_2007760261f40110
func Swig_DirectorTimeoutCallback_callback_run_halite_2007760261f40110(swig_c int, arg2 int, arg3 string) {
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorTimeoutCallback)
	_swig_i_1 = swigCopyString(arg3)
	swig_p.Run(arg2, _swig_i_1)
}

type SwigcptrTimeoutCallback uintptr

func (p SwigcptrTimeoutCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTimeoutCallback) SwigIsTimeoutCallback() {
}

func (p SwigcptrTimeoutCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteTimeoutCallback(arg1 TimeoutCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_TimeoutCallback_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTimeoutCallback) Run(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_TimeoutCallback_run_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func NewTimeoutCallback() (_swig_ret TimeoutCallback) {
	var swig_r TimeoutCallback
	swig_r = (TimeoutCallback)(SwigcptrTimeoutCallback(C._wrap_new_TimeoutCallback_halite_2007760261f40110()))
	return swig_r
}

type TimeoutCallback interface {
	Swigcptr() uintptr
	SwigIsTimeoutCallback()
	DirectorInterface() interface{}
	Run(arg2 int, arg3 string)
}

type SwigcptrUniConnectionVector uintptr

func (p SwigcptrUniConnectionVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUniConnectionVector) SwigIsUniConnectionVector() {
}

func NewUniConnectionVector__SWIG_0() (_swig_ret UniConnectionVector) {
	var swig_r UniConnectionVector
	swig_r = (UniConnectionVector)(SwigcptrUniConnectionVector(C._wrap_new_UniConnectionVector__SWIG_0_halite_2007760261f40110()))
	return swig_r
}

func NewUniConnectionVector__SWIG_1(arg1 int64) (_swig_ret UniConnectionVector) {
	var swig_r UniConnectionVector
	_swig_i_0 := arg1
	swig_r = (UniConnectionVector)(SwigcptrUniConnectionVector(C._wrap_new_UniConnectionVector__SWIG_1_halite_2007760261f40110(C.swig_type_4(_swig_i_0))))
	return swig_r
}

func NewUniConnectionVector(a ...interface{}) UniConnectionVector {
	argc := len(a)
	if argc == 0 {
		return NewUniConnectionVector__SWIG_0()
	}
	if argc == 1 {
		return NewUniConnectionVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrUniConnectionVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_UniConnectionVector_size_halite_2007760261f40110(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrUniConnectionVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_UniConnectionVector_capacity_halite_2007760261f40110(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrUniConnectionVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_UniConnectionVector_reserve_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.swig_type_7(_swig_i_1))
}

func (arg1 SwigcptrUniConnectionVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_UniConnectionVector_isEmpty_halite_2007760261f40110(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrUniConnectionVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_UniConnectionVector_clear_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrUniConnectionVector) Add(arg2 UniConnection) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_UniConnectionVector_add_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrUniConnectionVector) Get(arg2 int) (_swig_ret UniConnection) {
	var swig_r UniConnection
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (UniConnection)(SwigcptrUniConnection(C._wrap_UniConnectionVector_get_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrUniConnectionVector) Set(arg2 int, arg3 UniConnection) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_UniConnectionVector_set_halite_2007760261f40110(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteUniConnectionVector(arg1 UniConnectionVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_UniConnectionVector_halite_2007760261f40110(C.uintptr_t(_swig_i_0))
}

type UniConnectionVector interface {
	Swigcptr() uintptr
	SwigIsUniConnectionVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 UniConnection)
	Get(arg2 int) (_swig_ret UniConnection)
	Set(arg2 int, arg3 UniConnection)
}

type GoGameEndCallback struct {
	callback func(int, string) bool
}

func (p *GoGameEndCallback) Run(turn int, board string) bool {
	return p.callback(turn, board)
}

func RunGame(id uint, width int16, height int16, seed uint, ignore_timeout bool, connections []UniConnection, gameEnd func(int, string) bool) GameStatistics {
	cb := NewDirectorGameEndCallback(&GoGameEndCallback{callback: gameEnd})
	defer DeleteDirectorGameEndCallback(cb)
	vec := NewUniConnectionVector()
	defer DeleteUniConnectionVector(vec)
	for _, conn := range connections {
		vec.Add(conn)
	}
	return RawRunGame(id, width, height, seed, ignore_timeout, vec, cb)
}

type SwigcptrGameStatistics uintptr
type GameStatistics interface {
	Swigcptr() uintptr
}

func (p SwigcptrGameStatistics) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_GameEndCallback uintptr
type SwigDirector_GameEndCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_GameEndCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_TimeoutCallback uintptr
type SwigDirector_TimeoutCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_TimeoutCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUniConnection uintptr
type UniConnection interface {
	Swigcptr() uintptr
}

func (p SwigcptrUniConnection) Swigcptr() uintptr {
	return uintptr(p)
}

var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}
